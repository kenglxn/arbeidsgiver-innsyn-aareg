"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var alertstripe_1 = require("./alertstripe");

var AlertStripeInfo = function (_React$Component) {
    _inherits(AlertStripeInfo, _React$Component);

    function AlertStripeInfo() {
        _classCallCheck(this, AlertStripeInfo);

        return _possibleConstructorReturn(this, (AlertStripeInfo.__proto__ || Object.getPrototypeOf(AlertStripeInfo)).apply(this, arguments));
    }

    _createClass(AlertStripeInfo, [{
        key: "render",
        value: function render() {
            return React.createElement(alertstripe_1.default, Object.assign({ type: "info" }, this.props));
        }
    }]);

    return AlertStripeInfo;
}(React.Component);

exports.default = AlertStripeInfo;
AlertStripeInfo.__docgenInfo = {"description":"","displayName":"AlertStripeInfo","props":{"children":{"defaultValue":null,"description":"-","name":"children","required":true,"type":{"name":"string | number | boolean | {} | ReactElement<any> | ReactNodeArray | ReactPortal | ReactChildren..."}},"size":{"defaultValue":null,"description":"-","name":"size","required":false,"type":{"name":"ReactText"}},"className":{"defaultValue":null,"description":"-","name":"className","required":false,"type":{"name":"string"}}}}
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var nav_frontend_typografi_1 = require("nav-frontend-typografi");
var ekspanderbartpanel_base_pure_1 = require("./ekspanderbartpanel-base-pure");

var EkspanderbartpanelPure = function (_React$PureComponent) {
    _inherits(EkspanderbartpanelPure, _React$PureComponent);

    function EkspanderbartpanelPure() {
        _classCallCheck(this, EkspanderbartpanelPure);

        return _possibleConstructorReturn(this, (EkspanderbartpanelPure.__proto__ || Object.getPrototypeOf(EkspanderbartpanelPure)).apply(this, arguments));
    }

    _createClass(EkspanderbartpanelPure, [{
        key: "render",
        value: function render() {
            var _props = this.props,
                tag = _props.tag,
                tittel = _props.tittel,
                tittelProps = _props.tittelProps,
                renderProps = _objectWithoutProperties(_props, ["tag", "tittel", "tittelProps"]);

            var heading = React.createElement(nav_frontend_typografi_1.default, { type: tittelProps, tag: tag || 'span', className: "ekspanderbartPanel__heading" }, tittel);
            return React.createElement(ekspanderbartpanel_base_pure_1.default, Object.assign({}, renderProps, { heading: heading, ariaTittel: tittel }));
        }
    }]);

    return EkspanderbartpanelPure;
}(React.PureComponent);

EkspanderbartpanelPure.defaultProps = {
    tittelProps: 'undertittel',
    border: false
};
exports.default = EkspanderbartpanelPure;
EkspanderbartpanelPure.__docgenInfo = {"description":"","displayName":"EkspanderbartpanelPure","props":{}}
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var hjelpetekst_1 = require("./hjelpetekst");

var HjelpetekstUnderHoyre = function (_React$Component) {
    _inherits(HjelpetekstUnderHoyre, _React$Component);

    function HjelpetekstUnderHoyre() {
        _classCallCheck(this, HjelpetekstUnderHoyre);

        return _possibleConstructorReturn(this, (HjelpetekstUnderHoyre.__proto__ || Object.getPrototypeOf(HjelpetekstUnderHoyre)).apply(this, arguments));
    }

    _createClass(HjelpetekstUnderHoyre, [{
        key: "render",
        value: function render() {
            return React.createElement(hjelpetekst_1.default, Object.assign({ type: "under-hoyre" }, this.props));
        }
    }]);

    return HjelpetekstUnderHoyre;
}(React.Component);

exports.default = HjelpetekstUnderHoyre;
HjelpetekstUnderHoyre.__docgenInfo = {"description":"","displayName":"HjelpetekstUnderHoyre","props":{"children":{"defaultValue":null,"description":"Innholdet i hjelpetekst-vinduet","name":"children","required":true,"type":{"name":"ReactNode"}},"id":{"defaultValue":null,"description":"-","name":"id","required":true,"type":{"name":"string"}},"className":{"defaultValue":null,"description":"-","name":"className","required":false,"type":{"name":"string"}},"tittel":{"defaultValue":null,"description":"Tekst som vises ved mouseover","name":"tittel","required":false,"type":{"name":"string"}},"type":{"defaultValue":null,"description":"Posisjon pÃ¥ hjelpetekst-vinduet","name":"type","required":false,"type":{"name":"enum","value":[{"value":"\"auto\""},{"value":"\"over\""},{"value":"\"under\""},{"value":"\"venstre\""},{"value":"\"midt\""},{"value":"\"hoyre\""},{"value":"\"under-venstre\""},{"value":"\"under-hoyre\""}]}},"anchor":{"defaultValue":null,"description":"-","name":"anchor","required":false,"type":{"name":"any"}}}}
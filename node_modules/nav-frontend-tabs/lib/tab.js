"use strict";

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var cn = require("classnames");
var nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
var tabCls = function tabCls(props) {
    return cn('nav-frontend-tabs__tab-inner', props.className, {
        'nav-frontend-tabs__tab-inner--aktiv': props.aktiv,
        'nav-frontend-tabs__tab-inner--interaktiv': !props.aktiv,
        'nav-frontend-tabs__tab-inner--disabled': props.disabled
    });
};

var Tab = function (_React$Component) {
    _inherits(Tab, _React$Component);

    function Tab() {
        _classCallCheck(this, Tab);

        return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
    }

    _createClass(Tab, [{
        key: "getLabel",
        value: function getLabel() {
            return React.createElement("div", { className: "nav-frontend-tabs__tab-label" }, this.props.label || this.props.children);
        }
    }, {
        key: "render",
        value: function render() {
            var _props$linkCreator = this.props.linkCreator,
                linkCreator = _props$linkCreator === undefined ? function (props) {
                return React.createElement("button", Object.assign({}, props));
            } : _props$linkCreator;

            var domProps = nav_frontend_js_utils_1.omit(this.props, 'label', 'aktiv', 'disabled', 'linkCreator', 'children', 'linkRef');
            return React.createElement("li", { className: "nav-frontend-tabs__tab-outer", role: "presentation" }, linkCreator(_extends({}, domProps, {
                className: tabCls(this.props),
                role: 'tab',
                'aria-selected': this.props.aktiv,
                children: this.getLabel(),
                ref: this.props.linkRef
            })));
        }
    }]);

    return Tab;
}(React.Component);

exports.default = Tab;
Tab.__docgenInfo = {"description":"","displayName":"Tab","props":{"label":{"defaultValue":null,"description":"Innhold for label, kan være tekst eller HTML/JSX. Erstattes av `children` ved bruk av `<Tabs.Tab></Tabs.Tab>`","name":"label","required":false,"type":{"name":"string | number | boolean | {} | ReactElement<any> | ReactNodeArray | ReactPortal | ReactChildren"}},"aktiv":{"defaultValue":null,"description":"Vise som aktiv tab, kan brukes hvis man benytter pure versjon av Tabs-komponenten","name":"aktiv","required":false,"type":{"name":"boolean"}},"onClick":{"defaultValue":null,"description":"Valgfri onClick callback","name":"onClick","required":false,"type":{"name":"(event: MouseEvent<HTMLButtonElement>) => void"}},"onKeyDown":{"defaultValue":null,"description":"Brukes av TabsPure for å fasilitere tastatur-kontroll","name":"onKeyDown","required":false,"type":{"name":"(event: KeyboardEvent<HTMLButtonElement>) => void"}},"onFocus":{"defaultValue":null,"description":"Brukes av TabsPure for å fasilitere tastatur-kontroll","name":"onFocus","required":false,"type":{"name":"() => void"}},"linkCreator":{"defaultValue":null,"description":"Lar deg bestemme hvilket klikkbart HTML-element som brukes","name":"linkCreator","required":false,"type":{"name":"Function"}},"disabled":{"defaultValue":null,"description":"Gjør tab utilgjengelig","name":"disabled","required":false,"type":{"name":"boolean"}},"tabIndex":{"defaultValue":null,"description":"-","name":"tabIndex","required":false,"type":{"name":"number"}},"linkRef":{"defaultValue":null,"description":"Brukes av PureTabs for fokus-management","name":"linkRef","required":false,"type":{"name":"Function"}}}}
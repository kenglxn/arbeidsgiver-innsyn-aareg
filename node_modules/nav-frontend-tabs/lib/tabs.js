"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
var tab_1 = require("./tab");
var tabs_pure_1 = require("./tabs-pure");
require("nav-frontend-tabs-style");

var Tabs = function (_React$Component) {
    _inherits(Tabs, _React$Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        _this.state = {
            aktivTab: props.defaultAktiv
        };
        return _this;
    }

    _createClass(Tabs, [{
        key: "setActiveTab",
        value: function setActiveTab(e, index) {
            var _this2 = this;

            this.setState({ aktivTab: index }, function () {
                _this2.pure.linkRefs[index].focus();
            });
            this.props.onChange(e, index);
        }
    }, {
        key: "renderTabs",
        value: function renderTabs() {
            var _this3 = this;

            if (this.props.children) {
                return React.Children.map(this.props.children, function (child, i) {
                    if (React.isValidElement(child)) {
                        return React.cloneElement(child, {
                            aktiv: i === _this3.state.aktivTab
                        });
                    }
                    return child;
                });
            }
            if (this.props.tabs) {
                return this.props.tabs.map(function (tab, i) {
                    return React.createElement(tab_1.default, Object.assign({ key: nav_frontend_js_utils_1.guid(), aktiv: i === _this3.state.aktivTab }, tab));
                });
            }
        }
    }, {
        key: "render",
        value: function render() {
            var _this4 = this;

            var domProps = nav_frontend_js_utils_1.omit(this.props, 'tabs', 'onChange', 'defaultAktiv', 'ref');
            return React.createElement(tabs_pure_1.default, Object.assign({ ref: function ref(pure) {
                    return _this4.pure = pure;
                }, onChange: function onChange(e, index) {
                    return _this4.setActiveTab(e, index);
                } }, domProps), this.renderTabs());
        }
    }]);

    return Tabs;
}(React.Component);

Tabs.Tab = tab_1.default;
Tabs.defaultProps = {
    kompakt: false,
    defaultAktiv: 0
};
exports.default = Tabs;
var tabs_pure_2 = require("./tabs-pure");
exports.TabsPure = tabs_pure_2.default;
Tabs.__docgenInfo = {"description":"","displayName":"Tabs","props":{"onChange":{"defaultValue":null,"description":"Påkrevd callback for når state endrer seg etter klikk","name":"onChange","required":true,"type":{"name":"(event: SyntheticEvent<EventTarget>, index: number) => void"}},"defaultAktiv":{"defaultValue":{"value":"0"},"description":"Default aktiv tab index","name":"defaultAktiv","required":false,"type":{"name":"number"}},"tabs":{"defaultValue":null,"description":"Array av tabs, se `tab.tsx`","name":"tabs","required":false,"type":{"name":"TabProps[]"}},"kompakt":{"defaultValue":{"value":"false"},"description":"Rendre mindre, sekundær versjon","name":"kompakt","required":false,"type":{"name":"boolean"}},"arrowKeysAutoSwitchTabs":{"defaultValue":null,"description":"Bestemmer om piltaster skal auto-switche aktiv tab eller om de bare flytter fokus","name":"arrowKeysAutoSwitchTabs","required":false,"type":{"name":"boolean"}}}}
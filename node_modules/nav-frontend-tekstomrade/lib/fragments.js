"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var nav_frontend_lenker_1 = require("nav-frontend-lenker");
var httpRegex = /^(https?):\/\/.*$/;

var SpanFragment = function (_React$Component) {
    _inherits(SpanFragment, _React$Component);

    function SpanFragment() {
        _classCallCheck(this, SpanFragment);

        return _possibleConstructorReturn(this, (SpanFragment.__proto__ || Object.getPrototypeOf(SpanFragment)).apply(this, arguments));
    }

    _createClass(SpanFragment, [{
        key: "render",
        value: function render() {
            var children = this.props.children;

            if (!children || children.length === 0) {
                return null;
            }
            return React.createElement("span", Object.assign({}, this.props), children);
        }
    }]);

    return SpanFragment;
}(React.Component);

exports.SpanFragment = SpanFragment;

var LenkeFragment = function (_React$Component2) {
    _inherits(LenkeFragment, _React$Component2);

    function LenkeFragment() {
        _classCallCheck(this, LenkeFragment);

        return _possibleConstructorReturn(this, (LenkeFragment.__proto__ || Object.getPrototypeOf(LenkeFragment)).apply(this, arguments));
    }

    _createClass(LenkeFragment, [{
        key: "render",
        value: function render() {
            var href = this.props.href;

            if (!href || href.length === 0) {
                return null;
            }
            var matched = href.match(httpRegex) ? href : "http://" + href;
            return React.createElement(nav_frontend_lenker_1.default, Object.assign({ target: "_blank", href: matched }, this.props), matched);
        }
    }]);

    return LenkeFragment;
}(React.Component);

exports.LenkeFragment = LenkeFragment;
SpanFragment.__docgenInfo = {"description":"","displayName":"SpanFragment","props":{}}
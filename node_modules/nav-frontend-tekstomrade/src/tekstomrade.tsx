import * as PT from 'prop-types';
import * as React from 'react';
import { Normaltekst } from 'nav-frontend-typografi';
import { SpanFragment, LenkeFragment } from './fragments';

const uriRegex = /((?:[\w-]+:\/\/?|www(?:-\w+)?\.)[^\s()<>]+\w)/g;
const notNull = (element) => element !== null;

function tilJSXLenke(fragment, fragmentIndex) {
    const urimatch = uriRegex.exec(fragment);
    if (urimatch === null) {
        return <SpanFragment key={fragmentIndex}>{fragment}</SpanFragment>;
    }
    return <LenkeFragment key={fragmentIndex} href={urimatch[0]} />;
}

function leggTilLenkerJSX(innhold) {
    const fragments = innhold.split(uriRegex);
    if (fragments.length === 1) {
        const text = fragments[0];
        if (!text || text.length === 0) {
            return null;
        }
        return (<SpanFragment>{text}</SpanFragment>);
    }

    return fragments
        .map(tilJSXLenke)
        .filter(notNull);
}

function tilAvsnitt(avsnitt, index, list) {
    return (
        <Normaltekst className={index < list.length - 1 ? 'blokk-xs' : ''} key={index}>{avsnitt}</Normaltekst>
    );
}

export interface TekstomradeProps extends React.HTMLAttributes<HTMLDivElement> {
    /**
     * Ren tekst-innhold som skal formateres
     */
    children: string;
    /**
     * Skru av/p√• formatering
     */
    ingenFormattering?: boolean;
}

class Tekstomrade extends React.Component<TekstomradeProps> {
    render() {
        const { children, ingenFormattering, ...props } = this.props;

        const tekst = children;
        const avsnitt = ingenFormattering ? tekst : tekst.split(/[\r\n]+/)
            .map(leggTilLenkerJSX)
            .filter(notNull)
            .map(tilAvsnitt);

        return <div {...props}>{avsnitt}</div>;
    }
}

(Tekstomrade as React.ComponentClass).propTypes = {
    children: PT.string,
    ingenFormattering: PT.bool,
};

(Tekstomrade as React.ComponentClass).defaultProps = {
    children: '',
    ingenFormattering: false
};

export default Tekstomrade;

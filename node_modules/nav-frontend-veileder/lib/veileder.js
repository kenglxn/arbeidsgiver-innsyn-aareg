"use strict";

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PT = require("prop-types");
var cn = require("classnames");
var nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-veileder-style");
var cls = function cls(props) {
  return cn('nav-veileder', props.className, {
    'nav-veileder--advarsel': props.type === 'advarsel',
    'nav-veileder--feilmelding': props.type === 'feilmelding',
    'nav-veileder--suksess': props.type === 'suksess',
    'nav-veileder--flytende': props.posisjon === 'flytende',
    'nav-veileder--topp': props.posisjon === 'topp',
    'nav-veileder--hoyre': props.posisjon === 'høyre',
    'nav-veileder--bunn': props.posisjon === 'bunn',
    'nav-veileder--venstre': props.posisjon === 'venstre'
  });
};
var frameCls = function frameCls(props) {
  return cn('nav-veileder__frame', {
    'nav-veileder__frame--center': props.center,
    'nav-veileder__frame--transparent': props.transparent,
    'nav-veileder__frame--nomask': props.nomask,
    'nav-veileder__frame--s': props.storrelse === 'S',
    'nav-veileder__frame--m': props.storrelse === 'M',
    'nav-veileder__frame--l': props.storrelse === 'L',
    'nav-veileder__frame--xl': props.storrelse === 'XL',
    'nav-veileder__frame--suksess': props.fargetema === 'suksess',
    'nav-veileder__frame--advarsel': props.fargetema === 'advarsel',
    'nav-veileder__frame--feilmelding': props.fargetema === 'feilmelding'
  });
};
var pilCls = function pilCls(props) {
  return cn('nav-veileder__snakkeboblePil', {
    'nav-veileder__snakkeboblePil--flytende': props.posisjon === 'flytende',
    'nav-veileder__snakkeboblePil--topp': props.posisjon === 'topp',
    'nav-veileder__snakkeboblePil--hoyre': props.posisjon === 'høyre',
    'nav-veileder__snakkeboblePil--bunn': props.posisjon === 'bunn',
    'nav-veileder__snakkeboblePil--venstre': props.posisjon === 'venstre'
  });
};
var snakkebobleCls = function snakkebobleCls(props) {
  return cn('nav-veileder__snakkeboble', {
    'nav-veileder__snakkeboble--flytende': props.posisjon === 'flytende',
    'nav-veileder__snakkeboble--topp': props.posisjon === 'topp',
    'nav-veileder__snakkeboble--hoyre': props.posisjon === 'høyre',
    'nav-veileder__snakkeboble--bunn': props.posisjon === 'bunn',
    'nav-veileder__snakkeboble--venstre': props.posisjon === 'venstre'
  });
};

var Veileder = function (_React$Component) {
  _inherits(Veileder, _React$Component);

  function Veileder() {
    _classCallCheck(this, Veileder);

    return _possibleConstructorReturn(this, (Veileder.__proto__ || Object.getPrototypeOf(Veileder)).apply(this, arguments));
  }

  _createClass(Veileder, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          tekst = _props.tekst,
          other = _objectWithoutProperties(_props, ["children", "tekst"]);

      var domProps = nav_frontend_js_utils_1.omit(_extends({}, other), 'center', 'nomask', 'says', 'color', 'transparent', 'width', 'type', 'fargetema', 'storrelse', 'posisjon', 'className');
      return React.createElement("div", Object.assign({ className: cls(this.props) }, domProps), React.createElement("div", { className: frameCls(this.props) }, children), tekst && React.createElement("i", { className: pilCls(this.props) }), tekst && React.createElement("div", { className: snakkebobleCls(this.props) }, " ", this.props.tekst));
    }
  }]);

  return Veileder;
}(React.Component);

Veileder.defaultProps = {
  type: 'normal',
  fargetema: 'normal',
  storrelse: 'M',
  posisjon: 'flytende'
};
exports.VeilederPropsShape = {
  /**
   * Custom SVG-element som illustrerer en figur, f.eks. en av disse:
   * https://app.zeplin.io/project/59831e455850985791bdeb4d/screen/5a7c1fcc36781f9423ab6a0e
   */
  children: PT.node,
  /**
   * Klassenavn
   */
  className: PT.string,
  /**
   * Tekst eller HTML som rendres i en snakkeboble
   */
  tekst: PT.node,
  /**
   * Skrur av bakgrunnsfargen
   */
  transparent: PT.bool,
  /**
   * Skrur av sirkulær maskering/cropping av children
   */
  nomask: PT.bool,
  /**
   * Skrur av 80% height på children, og rendrer i full høyde (hvis innholdet skal sentreres)
   */
  center: PT.bool,
  /**
   * Predefinerte nøkler for styling av snakkeboblen, avhengig av type budskap.
   */
  type: PT.oneOf(['normal', 'suksess', 'advarsel', 'feilmelding']),
  /**
   * Predefinerte fargetemaer som bestemmer bakgrunnsfargen på veilederen.
   */
  fargetema: PT.oneOf(['normal', 'suksess', 'advarsel', 'feilmelding']),
  /**
   * Predefinerte størrelser
   */
  storrelse: PT.oneOf(['S', 'M', 'L', 'XL']),
  /**
   * Posisjon på snakkeboblen
   */
  posisjon: PT.oneOf(['flytende', 'topp', 'høyre', 'bunn', 'venstre'])
};
Veileder.propTypes = exports.VeilederPropsShape;
Veileder.defaultProps = {
  type: 'normal',
  fargetema: 'normal',
  storrelse: 'M',
  posisjon: 'flytende'
};
exports.default = Veileder;
Veileder.__docgenInfo = {"description":"","displayName":"Veileder","props":{"children":{"defaultValue":null,"description":"Custom SVG-element som illustrerer en figur, f.eks. en av disse:\nhttps://app.zeplin.io/project/59831e455850985791bdeb4d/screen/5a7c1fcc36781f9423ab6a0e","name":"children","required":false,"type":{"name":"ReactNode"}},"className":{"defaultValue":null,"description":"Klassenavn","name":"className","required":false,"type":{"name":"string"}},"tekst":{"defaultValue":null,"description":"Tekst eller HTML som rendres i en snakkeboble","name":"tekst","required":false,"type":{"name":"ReactNode"}},"transparent":{"defaultValue":null,"description":"Skrur av bakgrunnsfargen","name":"transparent","required":false,"type":{"name":"boolean"}},"nomask":{"defaultValue":null,"description":"Skrur av sirkulær maskering/cropping av children","name":"nomask","required":false,"type":{"name":"boolean"}},"center":{"defaultValue":null,"description":"Skrur av 80% height på children, og rendrer i full høyde (hvis innholdet skal sentreres)","name":"center","required":false,"type":{"name":"boolean"}},"type":{"defaultValue":{"value":"normal"},"description":"Predefinerte nøkler for styling av snakkeboblen, avhengig av type budskap.","name":"type","required":false,"type":{"name":"enum","value":[{"value":"\"normal\""},{"value":"\"suksess\""},{"value":"\"advarsel\""},{"value":"\"feilmelding\""}]}},"fargetema":{"defaultValue":{"value":"normal"},"description":"Predefinerte fargetemaer som bestemmer bakgrunnsfargen på veilederen.","name":"fargetema","required":false,"type":{"name":"\"normal\" | \"suksess\" | \"advarsel\" | \"feilmelding\""}},"storrelse":{"defaultValue":{"value":"M"},"description":"Predefinerte størrelser","name":"storrelse","required":false,"type":{"name":"\"S\" | \"M\" | \"L\" | \"XL\""}},"posisjon":{"defaultValue":{"value":"flytende"},"description":"Posisjon på snakkeboblen","name":"posisjon","required":false,"type":{"name":"\"flytende\" | \"topp\" | \"høyre\" | \"bunn\" | \"venstre\""}}}}
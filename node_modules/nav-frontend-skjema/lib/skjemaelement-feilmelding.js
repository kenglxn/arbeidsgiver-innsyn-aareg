"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PT = require("prop-types");

var SkjemaelementFeilmelding = function (_React$Component) {
    _inherits(SkjemaelementFeilmelding, _React$Component);

    function SkjemaelementFeilmelding() {
        _classCallCheck(this, SkjemaelementFeilmelding);

        return _possibleConstructorReturn(this, (SkjemaelementFeilmelding.__proto__ || Object.getPrototypeOf(SkjemaelementFeilmelding)).apply(this, arguments));
    }

    _createClass(SkjemaelementFeilmelding, [{
        key: "render",
        value: function render() {
            var feil = this.props.feil;

            return React.createElement("div", { role: "alert", "aria-live": "assertive" }, feil && React.createElement("div", { className: "skjemaelement__feilmelding" }, feil.feilmelding));
        }
    }]);

    return SkjemaelementFeilmelding;
}(React.Component);

exports.skjemaelementFeilmeldingShape = PT.shape({
    feilmelding: PT.oneOfType([PT.string, PT.node // For Ã¥ slippe igjennom FormattedMessage fra react-intl
    ]).isRequired
});
SkjemaelementFeilmelding.propTypes = {
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: exports.skjemaelementFeilmeldingShape
};
SkjemaelementFeilmelding.defaultProps = {
    feil: undefined
};
exports.default = SkjemaelementFeilmelding;
SkjemaelementFeilmelding.__docgenInfo = {"description":"","displayName":"SkjemaelementFeilmelding","props":{}}
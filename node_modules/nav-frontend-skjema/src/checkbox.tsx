import * as PT from 'prop-types';
import * as React from 'react';
import { guid } from 'nav-frontend-js-utils';
import 'nav-frontend-skjema-style';
import * as classNames from 'classnames';
import SkjemaelementFeilmelding, { SkjemaelementFeil, skjemaelementFeilmeldingShape } from './skjemaelement-feilmelding'; // tslint:disable-line:max-line-length

const cls = (className) => classNames('skjemaelement skjemaelement--horisontal', className);
const inputCls = (harFeil) => classNames('skjemaelement__input checkboks', {
    'skjemaelement__input--harFeil': harFeil
});

export interface CheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {
    /**
     * Klassenavn
     */
    className?: string;
    /**
     * Label for checkbox
     */
    label: React.ReactNode;
    /**
     * Id for checkbox, hvis id ikke er satt brukes en tilfeldig guid
     */
    id?: string;
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil?: SkjemaelementFeil;
    /**
     * Referanse til selve checkboxen. Brukes for eksempel til å sette fokus
     */
    checkboxRef?: (instance: HTMLInputElement | null) => void;
}

/**
 * Checkbox
 */
export class Checkbox extends React.Component<CheckboxProps, {}> {

    render() {
        const { className, label, id, feil, checkboxRef, ...other } = this.props;
        const inputId = id || guid();
        // tslint:disable:react-a11y-role-has-required-aria-props
        return (
            <div className={cls(className)}>
                <input
                    type="checkbox"
                    className={inputCls(feil)}
                    id={inputId}
                    ref={checkboxRef}
                    {...other}
                />
                <label className="skjemaelement__label" htmlFor={inputId}>{label}</label>
                <SkjemaelementFeilmelding feil={feil} />
            </div>
        );
    }
}

(Checkbox as React.ComponentClass).propTypes = {
    /**
     * ClassName
     */
    className: PT.string,
    /**
     * Label for checkbox
     */
    label: PT.node.isRequired,
    /**
     * Id for checkbox, hvis id ikke er satt brukes en tilfeldig guid
     */
    id: PT.string,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: skjemaelementFeilmeldingShape,
    /**
     * Referanse til selve checkboxen. Brukes for eksempel til å sette fokus
     */
    checkboxRef: PT.func
};

(Checkbox as React.ComponentClass).defaultProps = {
    className: undefined,
    id: undefined,
    feil: undefined,
    checkboxRef: undefined
};

export default Checkbox;
